package com.github.superzhc.web.mapper;

import com.github.superzhc.web.model.Book;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

@Component
@Mapper
public interface BookMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table book
     *
     * @mbg.generated Sun Sep 06 01:30:09 CST 2020
     */
    @Delete({
        "delete from book",
        "where bookId = #{bookid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String bookid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table book
     *
     * @mbg.generated Sun Sep 06 01:30:09 CST 2020
     */
    @Insert({
        "insert into book (bookId, fullname, ",
        "name, visiturl, ",
        "size, categoryname, ",
        "updateDate, baidu, ",
        "address)",
        "values (#{bookid,jdbcType=VARCHAR}, #{fullname,jdbcType=VARCHAR}, ",
        "#{name,jdbcType=VARCHAR}, #{visiturl,jdbcType=VARCHAR}, ",
        "#{size,jdbcType=VARCHAR}, #{categoryname,jdbcType=VARCHAR}, ",
        "#{updatedate,jdbcType=VARCHAR}, #{baidu,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR})"
    })
    int insert(Book record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table book
     *
     * @mbg.generated Sun Sep 06 01:30:09 CST 2020
     */
    @Select({
        "select",
        "bookId, fullname, name, visiturl, size, categoryname, updateDate, baidu, address",
        "from book",
        "where bookId = #{bookid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="bookId", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="fullname", property="fullname", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="visiturl", property="visiturl", jdbcType=JdbcType.VARCHAR),
        @Result(column="size", property="size", jdbcType=JdbcType.VARCHAR),
        @Result(column="categoryname", property="categoryname", jdbcType=JdbcType.VARCHAR),
        @Result(column="updateDate", property="updatedate", jdbcType=JdbcType.VARCHAR),
        @Result(column="baidu", property="baidu", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR)
    })
    Book selectByPrimaryKey(String bookid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table book
     *
     * @mbg.generated Sun Sep 06 01:30:09 CST 2020
     */
    @Select({
        "select",
        "bookId, fullname, name, visiturl, size, categoryname, updateDate, baidu, address",
        "from book"
    })
    @Results({
        @Result(column="bookId", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="fullname", property="fullname", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="visiturl", property="visiturl", jdbcType=JdbcType.VARCHAR),
        @Result(column="size", property="size", jdbcType=JdbcType.VARCHAR),
        @Result(column="categoryname", property="categoryname", jdbcType=JdbcType.VARCHAR),
        @Result(column="updateDate", property="updatedate", jdbcType=JdbcType.VARCHAR),
        @Result(column="baidu", property="baidu", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR)
    })
    List<Book> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table book
     *
     * @mbg.generated Sun Sep 06 01:30:09 CST 2020
     */
    @Update({
        "update book",
        "set fullname = #{fullname,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=VARCHAR},",
          "visiturl = #{visiturl,jdbcType=VARCHAR},",
          "size = #{size,jdbcType=VARCHAR},",
          "categoryname = #{categoryname,jdbcType=VARCHAR},",
          "updateDate = #{updatedate,jdbcType=VARCHAR},",
          "baidu = #{baidu,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR}",
        "where bookId = #{bookid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Book record);

    @Select({
            "<script>",
            "select",
            "bookId, fullname, name, visiturl, size, categoryname, updateDate, baidu, address",
            "from book",
            "<where>",
            "<if test=\"name!=null and name!=''\">and fullname like concat('%', #{name}, '%')</if>",
            "</where>",
            "</script>"
    })
    @Results({
            @Result(column="bookId", property="bookid", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="fullname", property="fullname", jdbcType=JdbcType.VARCHAR),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="visiturl", property="visiturl", jdbcType=JdbcType.VARCHAR),
            @Result(column="size", property="size", jdbcType=JdbcType.VARCHAR),
            @Result(column="categoryname", property="categoryname", jdbcType=JdbcType.VARCHAR),
            @Result(column="updateDate", property="updatedate", jdbcType=JdbcType.VARCHAR),
            @Result(column="baidu", property="baidu", jdbcType=JdbcType.VARCHAR),
            @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR)
    })
    List<Book> selectByCondition(Map params);
}
