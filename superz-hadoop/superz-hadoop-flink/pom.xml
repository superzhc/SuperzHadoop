<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>superz-hadoop</artifactId>
        <groupId>com.github.superzhc</groupId>
        <version>0.2.2</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>superz-hadoop-flink</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- 从 1.11 版本开始，不管是 Java API 还是 Scala API，都需要引用下面的包 -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-clients</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <!--Java接口-->
        <!--<dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-java</artifactId>
            <version>${flink.version}</version>
        </dependency>-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <!--Scala接口，不支持2.11版本的scala-->
        <!--<dependency>
            <groupId>org.apache.flink</groupId>
            &lt;!&ndash;<artifactId>flink-scala_${scala.binary.version}</artifactId>&ndash;&gt;
            <artifactId>flink-scala_2.11</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-scala_2.11</artifactId>
            <version>${flink.version}</version>
        </dependency>-->
        <!--Table接口-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-api-java</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!--Table API+DataStream混合接口-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-api-java-bridge</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!--CEP-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-cep</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!--region 通过简单地执行主类来运行作业，需要添加如下的依赖包-->

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-runtime</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!--对于 Table API-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-runtime</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-planner-loader</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!--endregion 通过简单地执行主类来运行作业，需要添加如下的依赖包-->

        <!--Flink 任务是可以在 Idea 中真正执行起来的，但是 WebUI 通常是无法打开的，会提示 `{errors:["Not found"]}`，这是因为缺少了相关的 jar 包，添加如下依赖即可使用 Web UI-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-runtime-web</artifactId>
            <version>${flink.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <!--region connector-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-base</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <!--2021年10月24日 github relase下载的jar包，Flink相关接口还是老的，存在问题，直接copy下来代码，引入javafaker依赖包-->
        <!--<dependency>
            <groupId>com.github.knaufk</groupId>
            <artifactId>flink-faker</artifactId>
            <version>0.3.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/libs/flink-faker-0.3.0.jar</systemPath>
        </dependency>-->
        <!--2021年10月25日 新增 JDBC 数据源操作-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-jdbc</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.21</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.ververica</groupId>
            <artifactId>flink-connector-mysql-cdc</artifactId>
            <version>1.3.0</version>
        </dependency>

        <!--s3文件系统-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-s3-fs-presto</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!--Mqtt 客户端-->
        <dependency>
            <groupId>org.eclipse.paho</groupId>
            <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
            <version>1.2.2</version>
        </dependency>
        <!--endregion-->

        <!--region 工具类-->
        <dependency>
            <groupId>com.github.superzhc</groupId>
            <artifactId>superz-common-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.superzhc</groupId>
            <artifactId>superz-common-faker</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.superzhc</groupId>
            <artifactId>superz-data-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--endregion-->
    </dependencies>

</project>