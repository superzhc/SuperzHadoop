package com.github.superzhc.groovy.base

import org.junit.Test

class FunctionTest {
    //===============================函数定义=============================================
    /**
     * 1. 参数可以不指定类型
     */
    def defineFunc(a, b) {
        a + b
    }

    int defineFunc2(int a, b) {
        a + b
    }

    @Test
    void testDefineFunc() {
        println(defineFunc(1, 2))
        println(defineFunc2(3, 4))
    }
    //===============================函数定义=============================================

    //===============================函数调用==============================================
    /**
     * 调用函数
     * 1. 如果所定义的函数有参数，在使用的时候可以不使用括号，但是必须得传入参数，参数与函数名以空格隔开
     * 2. 如果不出入参数必须添加括号，否则代码编译可以通过，但是运行时会出错，会将函数误认为是一个属性
     * 3. 如果所定义的函数没有参数，在调用的时候必须添加括号，否则运行出错，会将函数误认为是一个属性
     * 4. 函数调用的时候参数的个数必须匹配，否则也会报错，提示没有定义该函数，如果单个参数除外，可以不用输入参数，系统默认赋值null
     */
    //===============================函数调用==============================================

    //===============================默认参数===============================================
    /**
     * Groovy 中还有一个规定来指定方法中的参数的默认值。 如果没有值传递给参数的方法，则使用缺省值。
     * 如果使用非默认和默认参数，则必须注意，默认参数应在参数列表的末尾定义。
     */
    def defaultParameterFunc(p1, p2 = "superz", p3 = Double.MAX_VALUE) {
        println("[${p1}] ${p2}=${p3}")
    }

    @Test
    void testDefaultParameterFunc() {
        defaultParameterFunc("LOG")
        defaultParameterFunc("LOG", "Y")
        // [[p3:4.9E-324]] LOG=1.7976931348623157E308；非想要的结果， FIXME
        defaultParameterFunc("LOG", p3: Double.MIN_VALUE)
    }
    //===============================默认参数===============================================

    //===============================不定长参数=============================================
    def permaneousParameterFunc(... params) {
        for (param in params) {
            println(param)
        }
    }

    @Test
    void testPermaneousParameterFunc() {
        permaneousParameterFunc(1, 2, 3)
    }
    //===============================不定长参数=============================================

}
